language: go

go:
  - 1.15.x

notifications:
  email: false

env:
  global:
    # Multiarch manifest will support architectures from this list. It should be the same architectures, as ones in image-build-push step in this Travis config
    - MULTIARCH_MANIFEST_ARCHITECTURES="amd64 s390x ppc64le"
    # env variables for stable image build
    - STABLE_IMAGE=quay.io/skopeo/stable:v1.2.0
    - EXTRA_STABLE_IMAGE=quay.io/containers/skopeo:v1.2.0
    # env variable for upstream image build
    - UPSTREAM_IMAGE=quay.io/skopeo/upstream:master

# Just declaration of the image-build-push step with script actions to execute
x_base_steps:
  - &image-build-push
    services:
      - docker
    os: linux
    dist: focal
    script:
      # skopeo upstream image build
      - make -f release/Makefile build-image/upstream
      # Push image in case if build is started via cron job or code is pushed to master
      - if [ "$TRAVIS_EVENT_TYPE" == "push" ] || [ "$TRAVIS_EVENT_TYPE" == "cron" ]; then
           make -f release/Makefile push-image/upstream ;
        fi

      # skopeo stable image build
      - make -f release/Makefile build-image/stable
      # Push image in case if build is started via cron job or code is pushed to master
      - if [ "$TRAVIS_EVENT_TYPE" == "push" ] || [ "$TRAVIS_EVENT_TYPE" == "cron" ]; then
           make -f release/Makefile push-image/stable ;
        fi

# Just declaration of stage order to run
stages:
  # Test for local build
  - local-build
  # Build and push image for 1 architecture
  - name: image-build-push
    if: branch = master
  # Create and push image manifest to have multiarch image on top of architecture specific images
  - name: manifest-multiarch-push
    if: (type IN (push, cron)) AND branch = master

# Actual execution of steps
jobs:
  include:
    # Run 2 local-build steps in parallel for osx and linux/amd64 platforms
    - stage: local-build
      <<: *local-build
      name: local build for osx
      os: osx
      osx_image: xcode11.3
      install:
        # Ideally, the (brew update) should not be necessary and Travis would have fairly
        # frequently updated OS images; that's not been the case historically.
        # In particular, explicitly unlink python@2, which has been removed from Homebrew
        # since the last OS image build (as of July 2020), but the Travis OS still
        # contains it, and it prevents updating of Python 3.
      - brew update && brew unlink python@2 && brew install gpgme
      script:
      - hack/travis_osx.sh
    - stage: local-build
      <<: *local-build
      name: local build for linux
      os: linux
      services:
      - docker
      script: 
      - make vendor && ./hack/tree_status.sh && make local-cross && make check CHECK_BASE_IMAGES='fedora centos'

    # Run 3 image-build-push tasks in parallel for linux/amd64, linux/s390x and linux/ppc64le platforms (for upstream and stable)
    - stage: image-build-push
      <<: *image-build-push
      name: images for amd64
      arch: amd64

    - stage: image-build-push
      <<: *image-build-push
      name: images for s390x
      arch: s390x

    - stage: image-build-push
      <<: *image-build-push
      name: images for ppc64le
      arch: ppc64le

    # Run final task to generate multi-arch image manifests (for upstream and stable)
    - stage: manifest-multiarch-push
      os: linux
      dist: focal
      script:
      - make -f release/Makefile push-manifest-multiarch/upstream
      - make -f release/Makefile push-manifest-multiarch/stable
